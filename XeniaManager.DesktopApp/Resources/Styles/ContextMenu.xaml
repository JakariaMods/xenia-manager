<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- ContextMenu -->
    <Style TargetType="ContextMenu">
        <Setter Property="Background" Value="{DynamicResource BackgroundSecondaryColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontFamily" Value="{StaticResource SegoeFluent}"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5"
                            Padding="2">
                        <StackPanel IsItemsHost="True" 
                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                    VirtualizingStackPanel.IsVirtualizing="False"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ContextMenu MenuItem -->
    <Style TargetType="MenuItem">
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
        <Setter Property="FontFamily" Value="{StaticResource SegoeFluent}"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border x:Name="MenuItemBorder"
                            Background="{TemplateBinding Background}"
                            CornerRadius="5"
                            Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Content="{TemplateBinding Header}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <!-- Arrow indicator for submenu -->
                                <Path x:Name="Arrow" 
                                      Grid.Column="1"
                                      Data="M 0 0 L 4 4 L 0 8 Z"
                                      Fill="{DynamicResource ForegroundColor}"
                                      HorizontalAlignment="Right"
                                      Margin="5,0,0,0"
                                      VerticalAlignment="Center"
                                      Visibility="Collapsed"/>
                            </Grid>

                            <!-- Submenu Popup -->
                            <Popup x:Name="SubMenuPopup"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   HorizontalOffset="8"
                                   Placement="Right"
                                   StaysOpen="False"
                                   VerticalOffset="-5">
                                <Border Background="{DynamicResource BackgroundSecondaryColor}"
                                        BorderBrush="{DynamicResource BorderBrush}"
                                        BorderThickness="1"
                                        CornerRadius="5">
                                    <StackPanel IsItemsHost="True" 
                                                KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Show arrow if the item has submenus -->
                        <Trigger Property="HasItems" Value="True">
                            <Setter TargetName="Arrow" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <!-- Highlight background when mouse is over -->
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="MenuItemBorder" Property="Background" Value="{DynamicResource HighlightColor}"/>
                            <Setter Property="Background" Value="{DynamicResource HighlightColor}"/>
                        </Trigger>

                        <!-- Open submenu when hovered -->
                        <Trigger SourceName="SubMenuPopup" Property="IsOpen" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HighlightColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" Value="{DynamicResource HighlightColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>